<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<description>Example configuration to integration testing.</description>

	<!-- 
	*	You can use PropertyPlaceholderConfigurer class to externalize the deployment details 
	*	into a properties file, and access from bean configuration file via a special format â€“ ${variable}.
	-->
	<context:property-placeholder location="classpath:db/database.properties" ignore-unresolvable="true" order="-1"/>
	
	<bean id="dataset" class="org.dbunit.dataset.xml.FlatXmlDataSet">
		<constructor-arg value="classpath:db/dataset.xml" />
	</bean>
	
	<!-- For integration testing use the real database in the test environment (Oracle, MySQL, etc...) -->
	<bean id="databaseTester" class="org.dbunit.JdbcDatabaseTester">
		<constructor-arg index="0" value="${driver}"/>
		<constructor-arg index="1" value="${url}"/>
		<constructor-arg index="2" value="${username}"/>
		<constructor-arg index="3" value="${password}"/>
	</bean>

</beans>
